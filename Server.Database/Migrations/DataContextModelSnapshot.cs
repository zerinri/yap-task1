// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Database.Data;

namespace Server.Database.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("Server.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dinner"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Brunch"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Snack"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Midnight snack"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Healty snack"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Dessert"
                        });
                });

            modelBuilder.Entity("Server.Core.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchaseQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseUnitMeasure")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Flour",
                            PurchasePrice = 10m,
                            PurchaseQuantity = 1m,
                            PurchaseUnitMeasure = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pepper",
                            PurchasePrice = 4m,
                            PurchaseQuantity = 10m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Oil",
                            PurchasePrice = 7m,
                            PurchaseQuantity = 1m,
                            PurchaseUnitMeasure = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cheese",
                            PurchasePrice = 15m,
                            PurchaseQuantity = 100m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sugar",
                            PurchasePrice = 3m,
                            PurchaseQuantity = 80m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Salt",
                            PurchasePrice = 2m,
                            PurchaseQuantity = 70m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Meat",
                            PurchasePrice = 20m,
                            PurchaseQuantity = 1m,
                            PurchaseUnitMeasure = 0
                        });
                });

            modelBuilder.Entity("Server.Core.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Server.Core.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("UnitMeasure")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("Server.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 144, 83, 142, 21, 3, 200, 147, 141, 106, 50, 149, 151, 6, 159, 125, 176, 34, 251, 18, 225, 207, 6, 95, 45, 189, 102, 8, 80, 7, 82, 217, 212, 163, 133, 111, 89, 88, 10, 32, 193, 65, 178, 131, 43, 72, 192, 0, 93, 90, 96, 91, 185, 29, 250, 110, 244, 190, 161, 176, 234, 175, 249, 77, 172 },
                            PasswordSalt = new byte[] { 6, 23, 54, 213, 30, 50, 51, 120, 184, 24, 111, 151, 156, 217, 42, 44, 34, 120, 10, 167, 218, 58, 255, 119, 34, 237, 248, 39, 188, 186, 194, 189, 149, 49, 224, 219, 55, 208, 64, 71, 60, 131, 39, 198, 16, 87, 150, 147, 236, 23, 206, 54, 138, 32, 59, 168, 150, 26, 118, 46, 150, 71, 110, 166, 220, 230, 182, 128, 85, 5, 135, 12, 233, 111, 12, 246, 61, 239, 140, 56, 13, 76, 171, 70, 158, 64, 170, 23, 248, 128, 204, 19, 24, 28, 219, 226, 49, 121, 30, 198, 23, 227, 125, 168, 223, 102, 164, 248, 213, 251, 36, 7, 65, 243, 161, 38, 128, 35, 24, 144, 161, 139, 227, 229, 221, 146, 248, 234 },
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Server.Core.Entities.Recipe", b =>
                {
                    b.HasOne("Server.Core.Entities.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Server.Core.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("Server.Core.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Core.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Server.Core.Entities.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Server.Core.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Server.Core.Entities.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
