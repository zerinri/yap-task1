// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Data;

namespace Server.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("server.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dinner"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Brunch"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Snack"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Midnight snack"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Healty snack"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Dessert"
                        });
                });

            modelBuilder.Entity("server.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchaseQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseUnitMeasure")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Flour",
                            PurchasePrice = 10m,
                            PurchaseQuantity = 1m,
                            PurchaseUnitMeasure = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pepper",
                            PurchasePrice = 4m,
                            PurchaseQuantity = 10m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Oil",
                            PurchasePrice = 7m,
                            PurchaseQuantity = 1m,
                            PurchaseUnitMeasure = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cheese",
                            PurchasePrice = 15m,
                            PurchaseQuantity = 100m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sugar",
                            PurchasePrice = 3m,
                            PurchaseQuantity = 80m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Salt",
                            PurchasePrice = 2m,
                            PurchaseQuantity = 70m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Meat",
                            PurchasePrice = 20m,
                            PurchaseQuantity = 1m,
                            PurchaseUnitMeasure = 0
                        });
                });

            modelBuilder.Entity("server.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("server.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("UnitMeasure")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("server.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 126, 18, 131, 218, 222, 89, 224, 20, 191, 82, 66, 167, 114, 90, 23, 56, 250, 56, 2, 160, 167, 204, 116, 75, 136, 123, 176, 226, 173, 113, 171, 50, 243, 101, 204, 115, 1, 87, 251, 132, 229, 202, 34, 188, 251, 127, 169, 51, 32, 144, 88, 208, 170, 14, 162, 182, 241, 188, 0, 104, 152, 179, 90, 99 },
                            PasswordSalt = new byte[] { 208, 111, 23, 193, 231, 240, 166, 150, 55, 23, 79, 141, 99, 76, 99, 194, 107, 141, 186, 136, 241, 87, 22, 44, 211, 68, 105, 118, 217, 80, 209, 126, 218, 0, 179, 232, 189, 31, 245, 66, 81, 122, 78, 150, 114, 224, 198, 146, 171, 242, 159, 101, 86, 8, 84, 135, 135, 163, 51, 32, 26, 138, 136, 200, 154, 109, 154, 208, 88, 137, 186, 241, 227, 85, 139, 4, 59, 33, 236, 124, 238, 103, 246, 48, 188, 85, 255, 175, 141, 195, 53, 84, 10, 52, 214, 28, 143, 208, 43, 38, 98, 66, 130, 103, 141, 185, 58, 117, 165, 152, 45, 84, 192, 181, 171, 161, 149, 38, 4, 96, 144, 140, 198, 24, 64, 37, 118, 166 },
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("server.Entities.Recipe", b =>
                {
                    b.HasOne("server.Entities.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("server.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("server.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("server.Entities.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("server.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("server.Entities.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
