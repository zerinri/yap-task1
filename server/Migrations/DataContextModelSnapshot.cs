// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Data;

namespace server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("server.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dinner"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Brunch"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Snack"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Midnight snack"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Healty snack"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Dessert"
                        });
                });

            modelBuilder.Entity("server.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("MinimalUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchaseQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitMeasure")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MinimalUnitPrice = 10m,
                            Name = "Flour",
                            PurchaseQuantity = 1m,
                            UnitMeasure = 0
                        },
                        new
                        {
                            Id = 2,
                            MinimalUnitPrice = 4m,
                            Name = "Pepper",
                            PurchaseQuantity = 10m,
                            UnitMeasure = 1
                        },
                        new
                        {
                            Id = 3,
                            MinimalUnitPrice = 7m,
                            Name = "Oil",
                            PurchaseQuantity = 1m,
                            UnitMeasure = 2
                        },
                        new
                        {
                            Id = 4,
                            MinimalUnitPrice = 15m,
                            Name = "Cheese",
                            PurchaseQuantity = 100m,
                            UnitMeasure = 1
                        },
                        new
                        {
                            Id = 5,
                            MinimalUnitPrice = 3m,
                            Name = "Sugar",
                            PurchaseQuantity = 80m,
                            UnitMeasure = 1
                        },
                        new
                        {
                            Id = 6,
                            MinimalUnitPrice = 2m,
                            Name = "Salt",
                            PurchaseQuantity = 70m,
                            UnitMeasure = 1
                        },
                        new
                        {
                            Id = 7,
                            MinimalUnitPrice = 20m,
                            Name = "Meat",
                            PurchaseQuantity = 1m,
                            UnitMeasure = 0
                        });
                });

            modelBuilder.Entity("server.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("server.Models.Recipe_Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("UnitMeasure")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Recipe_Ingredients");
                });

            modelBuilder.Entity("server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 67, 232, 159, 144, 174, 141, 125, 51, 214, 138, 107, 5, 40, 96, 173, 80, 180, 129, 91, 187, 42, 2, 194, 160, 109, 88, 214, 137, 145, 107, 203, 25, 65, 150, 51, 151, 196, 24, 164, 91, 127, 121, 243, 54, 2, 223, 136, 39, 59, 12, 84, 251, 149, 49, 0, 138, 9, 117, 210, 25, 87, 192, 172, 138 },
                            PasswordSalt = new byte[] { 111, 89, 66, 68, 184, 155, 23, 4, 70, 53, 141, 124, 186, 136, 215, 209, 103, 86, 198, 165, 205, 232, 27, 71, 236, 15, 26, 232, 29, 109, 123, 213, 65, 138, 41, 196, 168, 190, 33, 28, 2, 157, 217, 212, 80, 101, 238, 148, 79, 32, 99, 45, 224, 91, 202, 81, 213, 184, 128, 68, 145, 213, 111, 87, 243, 155, 136, 204, 210, 140, 113, 140, 84, 54, 64, 156, 48, 142, 126, 32, 38, 111, 122, 9, 68, 136, 57, 20, 179, 119, 174, 3, 234, 167, 224, 219, 16, 228, 186, 215, 118, 172, 20, 41, 3, 243, 173, 154, 55, 15, 180, 227, 76, 125, 91, 238, 253, 118, 27, 82, 149, 155, 82, 220, 117, 164, 96, 7 },
                            Username = "user"
                        });
                });

            modelBuilder.Entity("server.Models.Recipe", b =>
                {
                    b.HasOne("server.Models.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("server.Models.Recipe_Ingredient", b =>
                {
                    b.HasOne("server.Models.Ingredient", "Ingredient")
                        .WithMany("Recipe_Ingredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Recipe", "Recipe")
                        .WithMany("Recipe_Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("server.Models.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("server.Models.Ingredient", b =>
                {
                    b.Navigation("Recipe_Ingredients");
                });

            modelBuilder.Entity("server.Models.Recipe", b =>
                {
                    b.Navigation("Recipe_Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
