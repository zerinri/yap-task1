// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Database.Data;

namespace Server.Database.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220319194029_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("Server.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dinner"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Brunch"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Snack"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Midnight snack"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Healty snack"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Dessert"
                        });
                });

            modelBuilder.Entity("Server.Core.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchaseQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseUnitMeasure")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Flour",
                            PurchasePrice = 10m,
                            PurchaseQuantity = 1m,
                            PurchaseUnitMeasure = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pepper",
                            PurchasePrice = 4m,
                            PurchaseQuantity = 10m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Oil",
                            PurchasePrice = 7m,
                            PurchaseQuantity = 1m,
                            PurchaseUnitMeasure = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cheese",
                            PurchasePrice = 15m,
                            PurchaseQuantity = 100m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sugar",
                            PurchasePrice = 3m,
                            PurchaseQuantity = 80m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Salt",
                            PurchasePrice = 2m,
                            PurchaseQuantity = 70m,
                            PurchaseUnitMeasure = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Meat",
                            PurchasePrice = 20m,
                            PurchaseQuantity = 1m,
                            PurchaseUnitMeasure = 0
                        });
                });

            modelBuilder.Entity("Server.Core.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Server.Core.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("UnitMeasure")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("Server.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 48, 136, 255, 31, 76, 25, 47, 156, 32, 188, 132, 122, 80, 6, 23, 41, 10, 180, 110, 122, 10, 133, 49, 235, 219, 224, 108, 33, 242, 248, 96, 56, 122, 22, 21, 212, 165, 214, 80, 117, 164, 177, 21, 159, 93, 51, 100, 89, 217, 249, 175, 187, 212, 231, 19, 187, 154, 222, 214, 252, 169, 233, 184, 159 },
                            PasswordSalt = new byte[] { 202, 204, 124, 220, 110, 6, 66, 82, 235, 83, 29, 110, 45, 227, 216, 93, 53, 221, 75, 103, 42, 69, 223, 217, 16, 10, 171, 95, 45, 229, 126, 43, 180, 227, 103, 102, 115, 81, 94, 32, 52, 15, 42, 32, 65, 15, 162, 5, 158, 146, 1, 14, 198, 172, 0, 221, 84, 159, 28, 14, 114, 177, 11, 103, 184, 4, 102, 139, 180, 188, 239, 9, 87, 101, 94, 63, 67, 249, 157, 154, 118, 32, 64, 59, 116, 113, 21, 232, 10, 40, 190, 76, 81, 136, 91, 141, 121, 194, 241, 110, 184, 75, 254, 178, 52, 131, 238, 8, 123, 177, 10, 126, 198, 213, 194, 192, 95, 163, 7, 178, 106, 135, 61, 223, 218, 58, 45, 37 },
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Server.Core.Entities.Recipe", b =>
                {
                    b.HasOne("Server.Core.Entities.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Server.Core.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("Server.Core.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Core.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Server.Core.Entities.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Server.Core.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Server.Core.Entities.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
